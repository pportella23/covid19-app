{"version":3,"sources":["services/api.js","utils/uf.js","components/LineChart.js","components/DoughnutChart.js","components/TotalStats.js","components/RankingList.js","components/ListTweets.js","pages/MainPage.js","App.js","index.js"],"names":["api","axios","create","uf","value","label","Chart","useState","chartData","setCharData","isBusy","setBusy","setValue","formatDate","date","getFullYear","getMonth","getDate","getData","state","a","get","data","results","lastDataSource","dataSource","unshift","casesByDateRaw","casesByDate","length","Object","entries","map","pos","push","confirmed","death_rate","deaths","estimated","estimated_population_2019","i","auxDate6","Date","setDate","auxDate5","auxDate4","auxDate3","auxDate2","console","log","week1","week2","week3","week4","week5","week6","obj","cases","labels","substring","datasets","borderColor","backgroundColor","pointBackgroundColor","pointRadius","pointHoverRadius","pointHoverBorderColor","useEffect","getChartData","className","onChange","selected","options","placeholder","height","legend","display","position","maintainAspectRatio","legendPosition","lPosition","width","title","text","fontSize","responsive","TotalStats","updated","setUpdated","countryCase","setCountryCase","countryDeath","setCountryDeath","countryRecovered","setCountryRecovered","numberWithCommas","x","toString","replace","updatedAt","updated_at","recovered","d","up","getHours","getCountryCases","RankingList","rankingListData","setRankingListData","_getLethality","parseFloat","toFixed","e","newItem","uid","lethality","sortList","order","attr","sorted","sort","b","lethA","lethB","_sortHelper","getRankingListData","onClick","key","ListTweets","sourceType","url","MainPage","loadingDoughnut","setLoadingDoughnut","doughnutData","setDoughnutData","getDoughnutData","recovers","total","chartDoughnut","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0dc69c8b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({});\r\n\r\nexport default api;\r\n","const uf = [\r\n  { value: \"AC\", label: \"Acre\" },\r\n  { value: \"AL\", label: \"Alagoas\" },\r\n  { value: \"AP\", label: \"Amapá\" },\r\n  { value: \"AM\", label: \"Amazonas\" },\r\n  { value: \"BA\", label: \"Bahia\" },\r\n  { value: \"CE\", label: \"Ceará\" },\r\n  { value: \"DF\", label: \"Distrito Federal\" },\r\n  { value: \"ES\", label: \"Espírito Santo\" },\r\n  { value: \"GO\", label: \"Goiás\" },\r\n  { value: \"MA\", label: \"Maranhão\" },\r\n  { value: \"MT\", label: \"Mato Grosso\" },\r\n  { value: \"MS\", label: \"Mato Grosso do Sul\" },\r\n  { value: \"MG\", label: \"Minas Gerais\" },\r\n  { value: \"PA\", label: \"Pará\" },\r\n  { value: \"PB\", label: \"Paraíba\" },\r\n  { value: \"PR\", label: \"Paraná\" },\r\n  { value: \"PE\", label: \"Pernambuco\" },\r\n  { value: \"PI\", label: \"Piauí\" },\r\n  { value: \"RJ\", label: \"Rio de Janeiro\" },\r\n  { value: \"RN\", label: \"Rio Grande do Norte\" },\r\n  { value: \"RS\", label: \"Rio Grande do Sul\" },\r\n  { value: \"RO\", label: \"Rondônia\" },\r\n  { value: \"RR\", label: \"Roraima\" },\r\n  { value: \"SC\", label: \"Santa Catarina\" },\r\n  { value: \"SP\", label: \"São Paulo\" },\r\n  { value: \"SE\", label: \"Sergipe\" },\r\n  { value: \"TO\", label: \"Tocantins\" },\r\n];\r\n\r\nexport default uf;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport api from \"../services/api\";\r\nimport Select from \"react-select\";\r\nimport uf from \"../utils/uf\";\r\nimport \"./LineChart.css\";\r\n\r\nexport default function Chart() {\r\n  const [chartData, setCharData] = useState({});\r\n  const [isBusy, setBusy] = useState(true);\r\n\r\n  //UF\r\n  const [value, setValue] = useState({\r\n    label: \"Rio Grande do Sul\",\r\n    value: \"RS\",\r\n  });\r\n\r\n  //updatedAt\r\n\r\n  useEffect(() => {\r\n    getChartData(value);\r\n  }, [value]);\r\n\r\n  function formatDate(date) {\r\n    let year = date.getFullYear();\r\n    let month = \"\";\r\n    let day = \"\";\r\n\r\n    if (date.getMonth() < 10) {\r\n      month = \"0\" + (date.getMonth() + 1);\r\n    } else {\r\n      month = date.getMonth() + 1;\r\n    }\r\n    if (date.getDate() < 10) {\r\n      day = \"0\" + date.getDate();\r\n    } else {\r\n      day = date.getDate();\r\n    }\r\n\r\n    return year + '-' + month + '-' + day;\r\n  }\r\n\r\n\r\n  async function getData(state) {\r\n    const lastDataSource = await (\r\n      await api.get(`https://brasil.io/api/dataset/covid19/caso/data?is_last=True&place_type=state&state=${state}`\r\n      )\r\n    ).data.results[0];\r\n    const dataSource = await (\r\n      await api.get(`https://brasil.io/api/dataset/covid19/caso/data?is_last=False&place_type=state&state=${state}`\r\n      )\r\n    ).data.results;\r\n\r\n    dataSource.unshift(lastDataSource);\r\n\r\n    let casesByDateRaw = [];\r\n    let casesByDate = [];\r\n\r\n    if (dataSource.length > 43) {\r\n      Object.entries(dataSource).map(pos => {\r\n        casesByDateRaw.push({\r\n          confirmed: pos[1].confirmed,\r\n          date: pos[1].date,\r\n          death_rate: pos[1].death_rate,\r\n          deaths: pos[1].deaths,\r\n        })\r\n        casesByDateRaw.estimated = pos[1].estimated_population_2019;\r\n        casesByDateRaw.state = pos[1].state;\r\n      })\r\n\r\n\r\n      for (let i = 0; i < 43; i += 7) {\r\n        casesByDate.push(casesByDateRaw[i])\r\n      }\r\n\r\n      casesByDate.estimated = casesByDateRaw.estimated;\r\n      casesByDate.state = casesByDateRaw.state;\r\n\r\n    }\r\n    else if (dataSource.length > 36) {\r\n      Object.entries(dataSource).map(pos => {\r\n        casesByDateRaw.push({\r\n          confirmed: pos[1].confirmed,\r\n          date: pos[1].date,\r\n          death_rate: pos[1].death_rate,\r\n          deaths: pos[1].deaths,\r\n        })\r\n        casesByDateRaw.estimated = pos[1].estimated_population_2019;\r\n        casesByDateRaw.state = pos[1].state;\r\n      })\r\n\r\n      for (let i = 0; i < 36; i += 7) {\r\n        casesByDate.push(casesByDateRaw[i])\r\n      }\r\n\r\n      let auxDate6 = new Date(casesByDate[casesByDate.length - 1].date);\r\n      auxDate6.setDate(auxDate6.getDate() - 6)\r\n\r\n      casesByDate.push({\r\n        confirmed: 0,\r\n        date: formatDate(auxDate6),\r\n        death_rate: 0,\r\n        deaths: 0,\r\n      })\r\n\r\n      casesByDate.estimated = casesByDateRaw.estimated;\r\n      casesByDate.state = casesByDateRaw.state;\r\n\r\n    } else if (dataSource.length > 29) {\r\n      Object.entries(dataSource).map(pos => {\r\n        casesByDateRaw.push({\r\n          confirmed: pos[1].confirmed,\r\n          date: pos[1].date,\r\n          death_rate: pos[1].death_rate,\r\n          deaths: pos[1].deaths,\r\n        })\r\n        casesByDateRaw.estimated = pos[1].estimated_population_2019;\r\n        casesByDateRaw.state = pos[1].state;\r\n      })\r\n\r\n      for (let i = 0; i < 29; i += 7) {\r\n        casesByDate.push(casesByDateRaw[i])\r\n      }\r\n\r\n      let auxDate6 = new Date(casesByDate[casesByDate.length - 1].date);\r\n      auxDate6.setDate(auxDate6.getDate() - 6)\r\n\r\n      let auxDate5 = new Date(auxDate6);\r\n      auxDate5.setDate(auxDate5.getDate() - 6)\r\n\r\n      casesByDate.push({\r\n        confirmed: 0,\r\n        date: formatDate(auxDate6),\r\n        death_rate: 0,\r\n        deaths: 0,\r\n      })\r\n\r\n      casesByDate.push({\r\n        confirmed: 0,\r\n        date: formatDate(auxDate5),\r\n        death_rate: 0,\r\n        deaths: 0,\r\n      })\r\n\r\n      casesByDate.estimated = casesByDateRaw.estimated;\r\n      casesByDate.state = casesByDateRaw.state;\r\n\r\n    } else if (dataSource.length > 22) {\r\n      Object.entries(dataSource).map(pos => {\r\n        casesByDateRaw.push({\r\n          confirmed: pos[1].confirmed,\r\n          date: pos[1].date,\r\n          death_rate: pos[1].death_rate,\r\n          deaths: pos[1].deaths,\r\n        })\r\n        casesByDateRaw.estimated = pos[1].estimated_population_2019;\r\n        casesByDateRaw.state = pos[1].state;\r\n      })\r\n\r\n      for (let i = 0; i < 22; i += 7) {\r\n        casesByDate.push(casesByDateRaw[i])\r\n      }\r\n\r\n      let auxDate6 = new Date(casesByDate[casesByDate.length - 1].date);\r\n      auxDate6.setDate(auxDate6.getDate() - 6)\r\n\r\n      let auxDate5 = new Date(auxDate6);\r\n      auxDate5.setDate(auxDate5.getDate() - 6)\r\n\r\n      let auxDate4 = new Date(auxDate5);\r\n      auxDate4.setDate(auxDate4.getDate() - 6)\r\n\r\n      casesByDate.push({\r\n        confirmed: 0,\r\n        date: formatDate(auxDate6),\r\n        death_rate: 0,\r\n        deaths: 0,\r\n      })\r\n\r\n      casesByDate.push({\r\n        confirmed: 0,\r\n        date: formatDate(auxDate5),\r\n        death_rate: 0,\r\n        deaths: 0,\r\n      })\r\n\r\n      casesByDate.push({\r\n        confirmed: 0,\r\n        date: formatDate(auxDate4),\r\n        death_rate: 0,\r\n        deaths: 0,\r\n      })\r\n\r\n      casesByDate.estimated = casesByDateRaw.estimated;\r\n      casesByDate.state = casesByDateRaw.state;\r\n\r\n    } else if (dataSource.length > 15) {\r\n      Object.entries(dataSource).map(pos => {\r\n        casesByDateRaw.push({\r\n          confirmed: pos[1].confirmed,\r\n          date: pos[1].date,\r\n          death_rate: pos[1].death_rate,\r\n          deaths: pos[1].deaths,\r\n        })\r\n        casesByDateRaw.estimated = pos[1].estimated_population_2019;\r\n        casesByDateRaw.state = pos[1].state;\r\n      })\r\n\r\n      for (let i = 0; i < 15; i += 7) {\r\n        casesByDate.push(casesByDateRaw[i])\r\n      }\r\n\r\n      let auxDate6 = new Date(casesByDate[casesByDate.length - 1].date);\r\n      auxDate6.setDate(auxDate6.getDate() - 6)\r\n\r\n      let auxDate5 = new Date(auxDate6);\r\n      auxDate5.setDate(auxDate5.getDate() - 6)\r\n\r\n      let auxDate4 = new Date(auxDate5);\r\n      auxDate4.setDate(auxDate4.getDate() - 6)\r\n\r\n      let auxDate3 = new Date(auxDate4);\r\n      auxDate3.setDate(auxDate3.getDate() - 6)\r\n\r\n      casesByDate.push({\r\n        confirmed: 0,\r\n        date: formatDate(auxDate6),\r\n        death_rate: 0,\r\n        deaths: 0,\r\n      })\r\n\r\n      casesByDate.push({\r\n        confirmed: 0,\r\n        date: formatDate(auxDate5),\r\n        death_rate: 0,\r\n        deaths: 0,\r\n      })\r\n\r\n      casesByDate.push({\r\n        confirmed: 0,\r\n        date: formatDate(auxDate4),\r\n        death_rate: 0,\r\n        deaths: 0,\r\n      })\r\n\r\n      casesByDate.push({\r\n        confirmed: 0,\r\n        date: formatDate(auxDate3),\r\n        death_rate: 0,\r\n        deaths: 0,\r\n      })\r\n\r\n      casesByDate.estimated = casesByDateRaw.estimated;\r\n      casesByDate.state = casesByDateRaw.state;\r\n\r\n    } else if (dataSource.length > 8) {\r\n      Object.entries(dataSource).map(pos => {\r\n        casesByDateRaw.push({\r\n          confirmed: pos[1].confirmed,\r\n          date: pos[1].date,\r\n          death_rate: pos[1].death_rate,\r\n          deaths: pos[1].deaths,\r\n        })\r\n        casesByDateRaw.estimated = pos[1].estimated_population_2019;\r\n        casesByDateRaw.state = pos[1].state;\r\n      })\r\n\r\n      for (let i = 0; i < 15; i += 7) {\r\n        casesByDate.push(casesByDateRaw[i])\r\n      }\r\n\r\n      let auxDate6 = new Date(casesByDate[casesByDate.length - 1].date);\r\n      auxDate6.setDate(auxDate6.getDate() - 6)\r\n\r\n      let auxDate5 = new Date(auxDate6);\r\n      auxDate5.setDate(auxDate5.getDate() - 6)\r\n\r\n      let auxDate4 = new Date(auxDate5);\r\n      auxDate4.setDate(auxDate4.getDate() - 6)\r\n\r\n      let auxDate3 = new Date(auxDate4);\r\n      auxDate3.setDate(auxDate3.getDate() - 6)\r\n\r\n      let auxDate2 = new Date(auxDate3);\r\n      auxDate2.setDate(auxDate2.getDate() - 6)\r\n\r\n\r\n      casesByDate.push({\r\n        confirmed: 0,\r\n        date: formatDate(auxDate6),\r\n        death_rate: 0,\r\n        deaths: 0,\r\n      })\r\n\r\n      casesByDate.push({\r\n        confirmed: 0,\r\n        date: formatDate(auxDate5),\r\n        death_rate: 0,\r\n        deaths: 0,\r\n      })\r\n\r\n      casesByDate.push({\r\n        confirmed: 0,\r\n        date: formatDate(auxDate4),\r\n        death_rate: 0,\r\n        deaths: 0,\r\n      })\r\n\r\n      casesByDate.push({\r\n        confirmed: 0,\r\n        date: formatDate(auxDate3),\r\n        death_rate: 0,\r\n        deaths: 0,\r\n      })\r\n\r\n      casesByDate.push({\r\n        confirmed: 0,\r\n        date: formatDate(auxDate2),\r\n        death_rate: 0,\r\n        deaths: 0,\r\n      })\r\n\r\n      casesByDate.estimated = casesByDateRaw.estimated;\r\n      casesByDate.state = casesByDateRaw.state;\r\n\r\n    } else {\r\n      console.log(\"dados insuficientes\")\r\n    }\r\n\r\n\r\n    let week1 = casesByDate[5].confirmed - casesByDate[6].confirmed;\r\n\r\n    let week2 = casesByDate[4].confirmed - casesByDate[5].confirmed;\r\n\r\n    let week3 = casesByDate[3].confirmed - casesByDate[4].confirmed;\r\n\r\n    let week4 = casesByDate[2].confirmed - casesByDate[3].confirmed;\r\n\r\n    let week5 = casesByDate[1].confirmed - casesByDate[2].confirmed;\r\n\r\n    let week6 = casesByDate[0].confirmed - casesByDate[1].confirmed;\r\n\r\n\r\n    const obj = {\r\n      week1: {\r\n        cases: week1,\r\n        date: casesByDate[5].date,\r\n      },\r\n      week2: {\r\n        cases: week2,\r\n        date: casesByDate[4].date,\r\n      },\r\n      week3: {\r\n        cases: week3,\r\n        date: casesByDate[3].date,\r\n      },\r\n      week4: {\r\n        cases: week4,\r\n        date: casesByDate[2].date,\r\n      },\r\n      week5: {\r\n        cases: week5,\r\n        date: casesByDate[1].date,\r\n      },\r\n      week6: {\r\n        cases: week6,\r\n        date: casesByDate[0].date,\r\n      },\r\n    };\r\n    return obj;\r\n  }\r\n\r\n\r\n  async function getChartData(state) {\r\n    setBusy(true);\r\n    const obj = await getData(state.value);\r\n    console.log(obj);\r\n\r\n    setCharData({\r\n      labels: [\r\n        `${obj.week1.date.substring(8, 10)}/${obj.week1.date.substring(5, 7)}`,\r\n        `${obj.week2.date.substring(8, 10)}/${obj.week2.date.substring(5, 7)}`,\r\n        `${obj.week3.date.substring(8, 10)}/${obj.week3.date.substring(5, 7)}`,\r\n        `${obj.week4.date.substring(8, 10)}/${obj.week4.date.substring(5, 7)}`,\r\n        `${obj.week5.date.substring(8, 10)}/${obj.week5.date.substring(5, 7)}`,\r\n        `${obj.week6.date.substring(8, 10)}/${obj.week6.date.substring(5, 7)}`,\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Aumento de casos por semana\",\r\n          data: [\r\n            obj.week1.cases,\r\n            obj.week2.cases,\r\n            obj.week3.cases,\r\n            obj.week4.cases,\r\n            obj.week5.cases,\r\n            obj.week6.cases,\r\n          ],\r\n          borderColor: \"#6370ff\",\r\n          backgroundColor: \"rgba(99, 112, 255, 0.3)\",\r\n          pointBackgroundColor: \"#6370ff\",\r\n          pointRadius: 4,\r\n          pointHoverRadius: 8,\r\n          pointHoverBorderColor: \"rgba(121, 209, 255, 0.9)\",\r\n        },\r\n      ],\r\n    });\r\n    setBusy(false);\r\n  }\r\n\r\n  function handleChange(selectedOption) {\r\n    setValue(selectedOption);\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      <p className=\"title\">{`Aumento de casos no estado ${\r\n        value ? value.value : \"RS\"\r\n        }`}</p>\r\n      <div className=\"select\">\r\n        <Select\r\n          value={value}\r\n          onChange={(selected) => handleChange(selected)}\r\n          options={uf}\r\n          placeholder=\"Selecione um Estado\"\r\n          className=\"select\"\r\n        />\r\n      </div>\r\n\r\n      {isBusy ? (\r\n        // <Line\r\n        //   height={100}\r\n        //   data={chartData}\r\n        //   options={{\r\n        //     legend: {\r\n        //       display: true,\r\n        //       position: \"bottom\",\r\n        //     },\r\n        //     maintainAspectRatio: true,\r\n        //   }}\r\n        // />\r\n        <p className=\"p\" >Carregando..</p>\r\n      ) : (\r\n          <Line\r\n            height={100}\r\n            data={chartData}\r\n            options={{\r\n              legend: {\r\n                display: true,\r\n                position: \"bottom\",\r\n              },\r\n              maintainAspectRatio: true,\r\n            }}\r\n          />\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport \"./DoughnutChart.css\";\r\n\r\nexport default function Chart({ chartData, legendPosition }) {\r\n  const [data] = useState(chartData);\r\n  const [lPosition] = useState(legendPosition);\r\n\r\n  const displayTitle = true;\r\n  const displayLegend = true;\r\n\r\n  return (\r\n    <div >\r\n      <Doughnut\r\n          height={400}\r\n          width={300}\r\n        data={data}\r\n        options={{\r\n          title: {\r\n            display: displayTitle,\r\n            text: \"Total de casos no Brasil\",\r\n            fontSize: 20,\r\n          },\r\n          legend: {\r\n            display: displayLegend,\r\n            position: lPosition,\r\n          },\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport api from \"../services/api\";\r\nimport \"./TotalStats.css\";\r\n\r\nexport default function TotalStats() {\r\n  //updatedAt\r\n  const [updated, setUpdated] = useState(\"\");\r\n  const [countryCase, setCountryCase] = useState(\"\");\r\n  const [countryDeath, setCountryDeath] = useState(\"\");\r\n  const [countryRecovered, setCountryRecovered] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getCountryCases();\r\n  }, []);\r\n\r\n  function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n  }\r\n\r\n  async function getCountryCases() {\r\n    const data = await api.get(\"https://covid19-brazil-api.now.sh/api/report/v1/brazil\");\r\n    const cases = data.data.data.confirmed;\r\n    const deaths = data.data.data.deaths;\r\n    const updatedAt = data.data.data.updated_at;\r\n    const recovered = data.data.data.recovered;\r\n    let d = new Date(updatedAt);\r\n    let up =\r\n      d.getDate() +\r\n      \"/\" +\r\n      (d.getMonth() + 1) +\r\n      \"/\" +\r\n      d.getFullYear() +\r\n      \" - \" +\r\n      d.getHours() +\r\n      \"h\";\r\n\r\n    setCountryCase(numberWithCommas(cases));\r\n    setCountryDeath(numberWithCommas(deaths));\r\n    setCountryRecovered(numberWithCommas(recovered));\r\n    setUpdated(up);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"updated\">\r\n        <p className=\"updateFont\">Última atualização</p>\r\n        <p>\r\n          <strong className=\"\">{updated}</strong>\r\n        </p>\r\n      </div>\r\n      <div className=\"cont\">\r\n        <div className=\"box\">\r\n          <p className=\"containerFont\">Casos Confirmados</p>\r\n          <p>\r\n            <strong className=\"strongCase\">{countryCase}</strong>\r\n          </p>\r\n        </div>\r\n        <div className=\"box\">\r\n          <p className=\"containerFont\">Total de Óbitos</p>\r\n          <p>\r\n            <strong className=\"strongDeath\">{countryDeath}</strong>\r\n          </p>\r\n        </div>\r\n        <div className=\"box\">\r\n          <p className=\"containerFont\">Total de Recuperados</p>\r\n          <p>\r\n            <strong className=\"strongLetal\">{countryRecovered}</strong>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport api from \"../services/api\";\r\nimport \"./RankingList.css\";\r\nimport { IoMdArrowRoundDown, IoMdArrowRoundUp } from \"react-icons/io\";\r\n\r\nexport default function RankingList() {\r\n  const [rankingListData, setRankingListData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getRankingListData();\r\n  }, []);\r\n\r\n  function _getLethality(uf) {\r\n    return parseFloat(((uf.deaths * 100) / uf.cases).toFixed(2));\r\n  }\r\n\r\n  async function getRankingListData() {\r\n    let data = await (\r\n      await api.get(\"https://covid19-brazil-api.now.sh/api/report/v1\")\r\n    ).data.data;\r\n    data = data.map((e) => {\r\n      const newItem = {};\r\n      newItem.uid = e.uid++;\r\n      newItem.state = e.state;\r\n      newItem.cases = e.cases;\r\n      newItem.deaths = e.deaths;\r\n      newItem.lethality = _getLethality(e);\r\n      return newItem;\r\n    });\r\n    setRankingListData(data);\r\n  }\r\n\r\n  function sortList(order, attr) {\r\n    let sorted = rankingListData\r\n      .sort((a, b) => _sortHelper(a, b, order, attr))\r\n      .map((e) => {\r\n        const newItem = {};\r\n        newItem.uid = e.uid++;\r\n        newItem.state = e.state;\r\n        newItem.cases = e.cases;\r\n        newItem.deaths = e.deaths;\r\n        newItem.lethality = e.lethality;\r\n        return newItem;\r\n      });\r\n    setRankingListData(sorted);\r\n  }\r\n\r\n  function _sortHelper(a, b, order, attr) {\r\n    if (attr === \"lethality\") {\r\n      const lethA = a.lethality;\r\n      const lethB = b.lethality;\r\n      if (order === \"asc\") {\r\n        if (lethA > lethB) return 1;\r\n        else if (lethA < lethB) return -1;\r\n        else return 0;\r\n      } else if (order === \"desc\") {\r\n        if (lethA < lethB) return 1;\r\n        else if (lethA > lethB) return -1;\r\n        else return 0;\r\n      }\r\n    } else {\r\n      if (order === \"asc\") {\r\n        if (a[attr] > b[attr]) return 1;\r\n        else if (a[attr] < b[attr]) return -1;\r\n        else return 0;\r\n      } else if (order === \"desc\") {\r\n        if (a[attr] < b[attr]) return 1;\r\n        else if (a[attr] > b[attr]) return -1;\r\n        else return 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"c\">\r\n      <div className=\"blueTable\">\r\n        <table>\r\n          <thead className=\"head\">\r\n            <tr>\r\n              <th>\r\n                Estado\r\n                <div className=\"sort-controls\">\r\n                  <div\r\n                    onClick={() => sortList(\"asc\", \"state\")}\r\n                    className=\"text-asc\"\r\n                  >\r\n                    <IoMdArrowRoundUp />\r\n                  </div>\r\n                  |\r\n                  <div\r\n                    onClick={() => sortList(\"desc\", \"state\")}\r\n                    className=\"text-desc\"\r\n                  >\r\n                    <IoMdArrowRoundDown />\r\n                  </div>\r\n                </div>\r\n              </th>\r\n              <th>\r\n                Casos\r\n                <div className=\"sort-controls\">\r\n                  <div\r\n                    onClick={() => sortList(\"asc\", \"cases\")}\r\n                    className=\"text-asc\"\r\n                  >\r\n                    <IoMdArrowRoundUp />\r\n                  </div>\r\n                  |\r\n                  <div\r\n                    onClick={() => sortList(\"desc\", \"cases\")}\r\n                    className=\"text-desc\"\r\n                  >\r\n                    <IoMdArrowRoundDown />\r\n                  </div>\r\n                </div>\r\n              </th>\r\n              <th>\r\n                Óbitos\r\n                <div className=\"sort-controls\">\r\n                  <div\r\n                    onClick={() => sortList(\"asc\", \"deaths\")}\r\n                    className=\"text-asc\"\r\n                  >\r\n                    <IoMdArrowRoundUp />\r\n                  </div>\r\n                  |\r\n                  <div\r\n                    onClick={() => sortList(\"desc\", \"deaths\")}\r\n                    className=\"text-desc\"\r\n                  >\r\n                    <IoMdArrowRoundDown />\r\n                  </div>\r\n                </div>\r\n              </th>\r\n              <th>\r\n                Letalidade\r\n                <div className=\"sort-controls\">\r\n                  <div\r\n                    onClick={() => sortList(\"asc\", \"lethality\")}\r\n                    className=\"text-asc\"\r\n                  >\r\n                    <IoMdArrowRoundUp />\r\n                  </div>\r\n                  |\r\n                  <div\r\n                    onClick={() => sortList(\"desc\", \"lethality\")}\r\n                    className=\"text-desc\"\r\n                  >\r\n                    <IoMdArrowRoundDown />\r\n                  </div>\r\n                </div>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          {rankingListData.map((uf) => {\r\n            return (\r\n              <tbody key={uf.uid}>\r\n                <tr>\r\n                  <td>\r\n                    <strong>{uf.state}</strong>\r\n                  </td>\r\n                  <td>{uf.cases}</td>\r\n                  <td>{uf.deaths}</td>\r\n                  <td>{uf.lethality}%</td>\r\n                </tr>\r\n              </tbody>\r\n            );\r\n          })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TwitterTimelineEmbed } from \"react-twitter-embed\";\r\n\r\nexport default function ListTweets() {\r\n  return (\r\n    <div>\r\n      <TwitterTimelineEmbed\r\n        sourceType=\"url\"\r\n        url=\"https://twitter.com/CoronavirusBra1\"\r\n        options={{ height: 400, width: 600 }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport LineChart from \"../components/LineChart\";\r\nimport DoughnutChart from \"../components/DoughnutChart\";\r\nimport TotalStats from \"../components/TotalStats\";\r\nimport RankingList from \"../components/RankingList\";\r\nimport ListTweets from \"../components/ListTweets\";\r\nimport MiddleList from \"../components/MiddleList\";\r\nimport \"./MainPage.css\";\r\nimport api from \"../services/api\";\r\n\r\nexport default function MainPage() {\r\n  //Doughnut\r\n  const [loadingDoughnut, setLoadingDoughnut] = useState(true);\r\n  const [doughnutData, setDoughnutData] = useState({});\r\n\r\n  useEffect(() => {\r\n    chartDoughnut();\r\n  }, []);\r\n\r\n  async function getDoughnutData() {\r\n    const data = await api.get(\r\n      \"https://covid19-brazil-api.now.sh/api/report/v1/brazil\"\r\n    );\r\n\r\n    const obj = {\r\n      cases: data.data.data.cases,\r\n      deaths: data.data.data.deaths,\r\n      recovers: data.data.data.recovered,\r\n      total: data.data.data.confirmed,\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  async function chartDoughnut() {\r\n    const obj = await getDoughnutData();\r\n\r\n    setDoughnutData({\r\n      labels: [`Recuperados`, `Casos Ativos`, `Óbitos`],\r\n      datasets: [\r\n        {\r\n          label: \"Casos\",\r\n          data: [obj.recovers, obj.cases, obj.deaths],\r\n          backgroundColor: [\"rgba(92, 188, 124, 0.9)\", \"rgba(99, 112, 255, 0.8)\", \"rgba(255, 87, 77, 0.9)\"],\r\n        },\r\n      ],\r\n    });\r\n    setLoadingDoughnut(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"MainPage\">\r\n      <header>Coronavírus</header>\r\n      <TotalStats />\r\n      <LineChart />\r\n      <div className=\"contMiddle\">\r\n        <div className=\"boxChart\">\r\n          {loadingDoughnut ? (\r\n            <p>Loading</p>\r\n          ) : (\r\n            <DoughnutChart chartData={doughnutData} legendPosition=\"bottom\" />\r\n          )}\r\n        </div>\r\n          {/* <MiddleList /> */}\r\n        <div className=\"box\">\r\n          <ListTweets />\r\n        </div>\r\n      </div>\r\n        <RankingList />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport \"./App.css\";\r\n\r\nexport default function App() {\r\n  return <MainPage />;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}